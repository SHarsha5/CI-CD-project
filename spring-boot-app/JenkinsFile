pipeline {
  agent none

  environment {
    SONAR_URL = "http://18.117.192.125:9000"
    DOCKER_IMAGE = "harsha952/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "CI-CD-project"
    GIT_USER_NAME = "SHarsha5"
  }

  stages {
    stage('Checkout') {
      agent { label 'master' }
      steps {
        checkout scm
      }
    }

    stage('Build and Test') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '--user root'
        }
      }
      steps {
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '--user root'
        }
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL'
        }
      }
    }

    stage('Build and Push Docker Image') {
      agent {
        docker {
          image 'abhishekf5/maven-abhishek-docker-agent:v1' // this image has docker installed
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t $DOCKER_IMAGE .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS) {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      agent { label 'master' }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "hs7429231@gmail.com"
            git config user.name "SHarsha5"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
